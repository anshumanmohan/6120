After adding labels, the program looks like:
entry:
	{'label': 'entry'}
	{'dest': 'x', 'op': 'const', 'type': 'int', 'value': 0}
	{'dest': 'i', 'op': 'const', 'type': 'int', 'value': 0}
	{'dest': 'one', 'op': 'const', 'type': 'int', 'value': 1}
loop:
	{'label': 'loop'}
	{'dest': 'max', 'op': 'const', 'type': 'int', 'value': 10}
	{'args': ['i', 'max'], 'dest': 'cond', 'op': 'lt', 'type': 'bool'}
	{'args': ['cond'], 'labels': ['body', 'exit'], 'op': 'br'}
body:
	{'label': 'body'}
	{'dest': 'mid', 'op': 'const', 'type': 'int', 'value': 5}
	{'args': ['i', 'mid'], 'dest': 'cond', 'op': 'lt', 'type': 'bool'}
	{'args': ['cond'], 'labels': ['then', 'endif'], 'op': 'br'}
then:
	{'label': 'then'}
	{'args': ['x', 'one'], 'dest': 'x', 'op': 'add', 'type': 'int'}
	{'labels': ['endif'], 'op': 'jmp'}
endif:
	{'label': 'endif'}
	{'dest': 'factor', 'op': 'const', 'type': 'int', 'value': 2}
	{'args': ['x', 'factor'], 'dest': 'x', 'op': 'mul', 'type': 'int'}
	{'args': ['i', 'one'], 'dest': 'i', 'op': 'add', 'type': 'int'}
	{'labels': ['loop'], 'op': 'jmp'}
exit:
	{'label': 'exit'}
	{'args': ['x'], 'op': 'print'}


entry has no strict dominators.
The strict dominators of loop are:
	entry
The strict dominators of body are:
	entry
	loop
The strict dominators of then are:
	body
	entry
	loop
The strict dominators of endif are:
	body
	entry
	loop
The strict dominators of exit are:
	entry
	loop


entry is the entry label and therefore has no immediate dominators
The immediate dominators of loop are:
	entry
The immediate dominators of body are:
	entry
	loop
The immediate dominators of then are:
	body
	entry
	loop
The immediate dominators of endif are:
	body
	entry
	loop
The immediate dominators of exit are:
	entry
	loop


The dominance frontier of loop is:
	body
	endif
	loop
The dominance frontier of endif is:
	then


